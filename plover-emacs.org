#+TITLE: Plover with Emacs
#+EXPORT_FILE_NAME: ./docs/index.html
#+STARTUP: showall
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="style.css" />

----------------

Get the Plover Emacs dictionary [[https://github.com/excalamus/plover-emacs][here]].

* Opening bracket
[[https://www.gnu.org/software/emacs/][Emacs]] is a text editor/word processor used by programmers and authors,
as well as researchers and hobbiests worldwide.  Originally released
in 1976, it is the flagship software of the [[https://www.gnu.org/philosophy/free-sw.html][GNU project]].  Like Plover,
Emacs is community developed and allows you to run, change, and
distribute it, more or less, however you want (as compared to
similarly purposed software).  It has been developed for more than 40
years and, although it might not look fancy, has countless features
and add-ons[fn:3].

#+CAPTION: Screenshot of the Emacs text editor.
[[file:./emacs.png]]

Emacs works by binding every key to a programming command[fn:1].  For
example, pressing 'a' calls the =self-insert-command= which inserts
the character you type, 'a'.  Commands can also be bound to key
combinations.  To change windows, you press 'Control + x + o' (notated
=C-x o=) to call =other-window=.  Commands not bound to a key or key
combination are accessed through an interactive process initiated with
'Alt+x' (notated =M-x=)[fn:2].  To change windows using the
interactive process, you would type =M-x other-window=.

Plover works by mapping a stroke of keys to some output; a character,
word, or some modified combination of these.  Strokes are mapped to
outputs within a JSON file.  See the Plover GitHub wiki entry
"[[https://github.com/openstenoproject/plover/wiki/Dictionary-Format][Dictionary Format]]" for the accepted syntax.

#+begin_src js :tangle plover-emacs.json :exports none
{
#+end_src

* Dictionary design
** Sequence chains
Many Emacs commands are called through sequences.  Typically, a
dictionary maps a stroke to a single output element (e.g. character,
word, or phrase).  However, it's possible to send a sequence by
separating elements with a space.

For example, in Emacs =C-x 8 m= writes =µ=.  We can write =µ= by way
of Emacs in Plover[fn:4] with:
#+begin_example
{#Control_L(x) 8 m}
#+end_example

To pass capitalized letters, you must use =Shift()=.  For example,
=C-x 8 R= writes =®=.  To have Plover pass the Emacs sequence, we
would do:
#+begin_example
{#Control_L(x) 8 Shift(r)}
#+end_example

** Mapping the alphabet
It's nearly possible to stroke the entire alphabet with the left hand.
By defining a right hand stroke to represent a modifier, we can create
single strokes modifiers for every letter in the alphabet.

|-----------+------------+--------|
| Left Hand | Right Hand | Letter |
|-----------+------------+--------|
| A         |            | "a"    |
|-----------+------------+--------|
| PW        |            | "b"    |
|-----------+------------+--------|
| KR        |            | "c"    |
|-----------+------------+--------|
| TK        |            | "d"    |
|-----------+------------+--------|
|           | E          | "e"    |
|-----------+------------+--------|
| TP        |            | "f"    |
|-----------+------------+--------|
| TKPW      |            | "g"    |
|-----------+------------+--------|
| H         |            | "h"    |
|-----------+------------+--------|
|           | EU         | "i"    |
|-----------+------------+--------|
| SKWR      |            | "j"    |
|-----------+------------+--------|
| K         |            | "k"    |
|-----------+------------+--------|
| HR        |            | "l"    |
|-----------+------------+--------|
| PH        |            | "m"    |
|-----------+------------+--------|
| TPH       |            | "n"    |
|-----------+------------+--------|
| O         |            | "o"    |
|-----------+------------+--------|
| P         |            | "p"    |
|-----------+------------+--------|
| KW        |            | "q"    |
|-----------+------------+--------|
| R         |            | "r"    |
|-----------+------------+--------|
| S         |            | "s"    |
|-----------+------------+--------|
| T         |            | "t"    |
|-----------+------------+--------|
|           | U          | "u"    |
|-----------+------------+--------|
| SR        |            | "v"    |
|-----------+------------+--------|
| W         |            | "w"    |
|-----------+------------+--------|
| KP        |            | "x"    |
|-----------+------------+--------|
| KWR       |            | "y"    |
|-----------+------------+--------|
| STKPW     |            | "z"    |
|-----------+------------+--------|

* TODO Execute extended command and Quit
Perhaps the two most important bindings are =M-x=
(=execute-extended-command=) and =C-g= (=keyboard-quit=).  They
deserve single-handed, single strokes.

For people who are right-handed, the following allow for quick access
when using a mouse.

=ULT= sounds like "Alt".
#+begin_src js :tangle plover-emacs.json :exports code
"ULT": "{#Alt_L(x)}",
#+end_src

The word "control" has an 'r' and an 'n' in it.  Honestly, there's not
much of an association.  It's simply available and easy to write.
#+begin_src js :tangle plover-emacs.json :exports code
"-RPB": "{#Control(g)}",
#+end_src

* COMMENT Leader
Vim provides a key reserved for user defined functions called the
"leader". Any key binding that starts with the leader is guaranteed to
be available. Leader functionality is available in Emacs through
evil-mode or general.el.
#+begin_src js :tangle plover-emacs.json :exports code
"KWR-RBG": "{#Page_Down}",
#+end_src

* Function keys
It doesn't seem like =*= is used at all with numbers.  This means it
can be used to differentiate the F keys.

#+begin_src js :tangle plover-emacs.json :exports code
"*": "{#F1}",
"2*": "{#F2}",
"3*": "{#F3}",
"4*": "{#F4}",
"5*": "{#F5}",
"*6": "{#F6}",
"*7": "{#F7}",
"*8": "{#F8}",
"*9": "{#F9}",
"10*": "{#F10}",
"1*D": "{#F11}",
"2*D": "{#F12}",
#+end_src

* Escape, Meta, Alt, Control, Shift
The Escape key is distributed with Plover in the =commands.json=
dictionary.  For completeness, let's also put it in the Emacs
dictionary:

#+begin_src js :tangle plover-emacs.json :exports code
"TPEFBG": "{#Escape}",
#+end_src

Mark Kislingbury [[http://acraconference2015.weebly.com/uploads/2/1/4/4/21444166/mark_kislingbury_presentation_acra_01-23-2015.pdf][advises]] to put small words on the left.  Steno order
means that we can then use the rest of the board to represent phrases
containing that word.  For example, =THA= ("that") leaves the board
open for phrases like "that was", "that will", "that had", etc. by
adding a single key.

We can use this principle with =SH= (Shift), =KR= (Control), and =PH=
(Meta/Alt).  By default, =SH= is "shh", =PH= is "pH", and =KR= is
"consider".  All of these strokes are far more important than their
default mappings.  Additionally, =KHR= is also mapped to "consider".
This means we can apprehend each stroke without much penalty to the
overall Plover theory.

This should mean we can write commands in a way that simulates holding
a modifier key.

The idea is to map all Emacs bindings to chains.  In this way, all
bindings can at least be expressed in multiple strokes.  For example,

- =C-x f= would be =KR/T-PLZ/F=
- =C-c C-c= would be =KR/KR*/KR/KR*=
- etc.

Of course we would want more efficient bindings than those. But the
idea, I think, covers all the cases completely and intuitively.

* Notes
** Modifiers Single Stroke
From DiDoesDigital: [[https://github.com/didoesdigital/steno-dictionaries/blob/master/dictionaries/modifiers-single-stroke.json][modifiers-single-stroke]]

- =*RPLT= as Super
- =*RBLT= as Super+Alt
- =*RPBLT= as Super+Shift
- =*RBL= as Control

#+begin_src js :exports code
{
"A*RPLT": "{#Super_L(a)}",
"PW*RPLT": "{#Super_L(b)}",
"KR*RPLT": "{#Super_L(c)}",
"TK*RPLT": "{#Super_L(d)}",
"*ERPLT": "{#Super_L(e)}",
"TP*RPLT": "{#Super_L(f)}",
"TKPW*RPLT": "{#Super_L(g)}",
"H*RPLT": "{#Super_L(h)}",
"*EURPLT": "{#Super_L(i)}",
"SKWR*RPLT": "{#Super_L(j)}",
"K*RPLT": "{#Super_L(k)}",
"HR*RPLT": "{#Super_L(l)}",
"PH*RPLT": "{#Super_L(m)}",
"TPH*RPLT": "{#Super_L(n)}",
"O*RPLT": "{#Super_L(o)}",
"P*RPLT": "{#Super_L(p)}",
"KW*RPLT": "{#Super_L(q)}",
"R*RPLT": "{#Super_L(r)}",
"S*RPLT": "{#Super_L(s)}",
"T*RPLT": "{#Super_L(t)}",
"*URPLT": "{#Super_L(u)}",
"SR*RPLT": "{#Super_L(v)}",
"W*RPLT": "{#Super_L(w)}",
"KP*RPLT": "{#Super_L(x)}",
"KWR*RPLT": "{#Super_L(y)}",
"STKPW*RPLT": "{#Super_L(z)}",
"A*RBLT": "{#Super_L(Alt_L(a))}",
"PW*RBLT": "{#Super_L(Alt_L(b))}",
"KR*RBLT": "{#Super_L(Alt_L(c))}",
"TK*RBLT": "{#Super_L(Alt_L(d))}",
"*ERBLT": "{#Super_L(Alt_L(e))}",
"TP*RBLT": "{#Super_L(Alt_L(f))}",
"TKPW*RBLT": "{#Super_L(Alt_L(g))}",
"H*RBLT": "{#Super_L(Alt_L(h))}",
"*EURBLT": "{#Super_L(Alt_L(i))}",
"SKWR*RBLT": "{#Super_L(Alt_L(j))}",
"K*RBLT": "{#Super_L(Alt_L(k))}",
"HR*RBLT": "{#Super_L(Alt_L(l))}",
"PH*RBLT": "{#Super_L(Alt_L(m))}",
"TPH*RBLT": "{#Super_L(Alt_L(n))}",
"O*RBLT": "{#Super_L(Alt_L(o))}",
"P*RBLT": "{#Super_L(Alt_L(p))}",
"KW*RBLT": "{#Super_L(Alt_L(q))}",
"R*RBLT": "{#Super_L(Alt_L(r))}",
"S*RBLT": "{#Super_L(Alt_L(s))}",
"T*RBLT": "{#Super_L(Alt_L(t))}",
"*URBLT": "{#Super_L(Alt_L(u))}",
"SR*RBLT": "{#Super_L(Alt_L(v))}",
"W*RBLT": "{#Super_L(Alt_L(w))}",
"KP*RBLT": "{#Super_L(Alt_L(x))}",
"KWR*RBLT": "{#Super_L(Alt_L(y))}",
"STKPW*RBLT": "{#Super_L(Alt_L(z))}",
"A*RPBLT": "{#Super_L(Shift_L(a))}",
"PW*RPBLT": "{#Super_L(Shift_L(b))}",
"KR*RPBLT": "{#Super_L(Shift_L(c))}",
"TK*RPBLT": "{#Super_L(Shift_L(d))}",
"*ERPBLT": "{#Super_L(Shift_L(e))}",
"TP*RPBLT": "{#Super_L(Shift_L(f))}",
"TKPW*RPBLT": "{#Super_L(Shift_L(g))}",
"H*RPBLT": "{#Super_L(Shift_L(h))}",
"*EURPBLT": "{#Super_L(Shift_L(i))}",
"SKWR*RPBLT": "{#Super_L(Shift_L(j))}",
"K*RPBLT": "{#Super_L(Shift_L(k))}",
"HR*RPBLT": "{#Super_L(Shift_L(l))}",
"PH*RPBLT": "{#Super_L(Shift_L(m))}",
"TPH*RPBLT": "{#Super_L(Shift_L(n))}",
"O*RPBLT": "{#Super_L(Shift_L(o))}",
"P*RPBLT": "{#Super_L(Shift_L(p))}",
"KW*RPBLT": "{#Super_L(Shift_L(q))}",
"R*RPBLT": "{#Super_L(Shift_L(r))}",
"S*RPBLT": "{#Super_L(Shift_L(s))}",
"T*RPBLT": "{#Super_L(Shift_L(t))}",
"*URPBLT": "{#Super_L(Shift_L(u))}",
"SR*RPBLT": "{#Super_L(Shift_L(v))}",
"W*RPBLT": "{#Super_L(Shift_L(w))}",
"KP*RPBLT": "{#Super_L(Shift_L(x))}",
"KWR*RPBLT": "{#Super_L(Shift_L(y))}",
"STKPW*RPBLT": "{#Super_L(Shift_L(z))}",
"1-RG": "{^}{#Control_L(F1)}{^}",
"2-RG": "{^}{#Control_L(F2)}{^}",
"3-RG": "{^}{#Control_L(F3)}{^}",
"4-RG": "{^}{#Control_L(F4)}{^}",
"5-RG": "{^}{#Control_L(F5)}{^}",
"KR-6": "{^}{#Control_L(F6)}{^}",
"KR-7": "{^}{#Control_L(F7)}{^}",
"KR-8": "{^}{#Control_L(F8)}{^}",
"KR-9": "{^}{#Control_L(F9)}{^}",
"10-RG": "{^}{#Control_L(F10)}{^}",
"11-RG": "{^}{#Control_L(F11)}{^}",
"12-RG": "{^}{#Control_L(F12)}{^}",
"A*RBL": "{#Control_L(a)}",
"PW*RBL": "{#Control_L(b)}",
"KR*RBL": "{#Control_L(c)}",
"TK*RBL": "{#Control_L(d)}",
"*ERBL": "{#Control_L(e)}",
"TP*RBL": "{#Control_L(f)}",
"TKPW*RBL": "{#Control_L(g)}",
"H*RBL": "{#Control_L(h)}",
"*EURBL": "{#Control_L(i)}",
"SKWR*RBL": "{#Control_L(j)}",
"K*RBL": "{#Control_L(k)}",
"HR*RBL": "{#Control_L(l)}",
"PH*RBL": "{#Control_L(m)}",
"TPH*RBL": "{#Control_L(n)}",
"O*RBL": "{#Control_L(o)}",
"P*RBL": "{#Control_L(p)}",
"KW*RBL": "{#Control_L(q)}",
"R*RBL": "{#Control_L(r)}",
"S*RBL": "{#Control_L(s)}",
"T*RBL": "{#Control_L(t)}",
"*URBL": "{#Control_L(u)}",
"SR*RBL": "{#Control_L(v)}",
"W*RBL": "{#Control_L(w)}",
"KP*RBL": "{#Control_L(x)}",
"KWR*RBL": "{#Control_L(y)}",
"STKPW*RBL": "{#Control_L(z)}",
"WUZ/WUZ": "{#}"
}
#+end_src

** Nimble single strokes
From Joshua Grams: [[https://gist.githubusercontent.com/JoshuaGrams/4847241da6a5678f7ee11ffccb79d583/raw/61c14180a277dd7f95a09326258a3da19698b107/nimble-single-stroke.json][nimble-single-strokes]]

- =-FLGT= for Alt
- =-BLGT= for Control
- =-RLGT= for Shift
- =-PLGT= for Super
- =-PBLGT= for Super+Control
- =-FPLGT= for Super+Alt
- =-RPLGT= for Super+Shift
- =-FBLGT= for Control+Alt
- =-RBLGT= for Control+Shift
- =-FRLGT= for Alt+Shift
- =-FPBLGT= for Super+Control+Alt
- =-FRPLGT= for Super+Alt+Shift
- =-FRBLGT= for Control+Alt+Shift
- =-FRPBLGT= for Super+Control+Alt+Shift

#+begin_src js :exports code
{
        "1-8G9": "{#F1}",
        "2-8G9": "{#F2}",
        "3-8G9": "{#F3}",
        "4-8G9": "{#F4}",
        "12-8G9": "{#F5}",
        "23-8G9": "{#F6}",
        "34-8G9": "{#F7}",
        "123-8G9": "{#F8}",
        "234-8G9": "{#F9}",
        "14-8G9": "{#F10}",
        "13-8G9": "{#F11}",
        "24-8G9": "{#F12}",
        "STK-P": "{#up}",
        "STK-R": "{#left}",
        "STK-B": "{#down}",
        "STK-G": "{#right}",
        "STK-RPG": "{#page_up}",
        "STK-FBL": "{#page_down}",
        "STK-FPL": "{#home}",
        "STK-RBG": "{#end}",
        "STK-RB": "{#return}",
        "STK-F": "{#backspace}",
        "STK-L": "{#delete}",
        "STK-FR": "{#escape}",
        "STK-LG": "{#tab}",
        "STK-RP": "{#slash}",
        "STK-PG": "{#backslash}",
        "STKP": "{#Super_L()}",
        "APLGT": "{#Super_L(a)}",
        "PW-PLGT": "{#Super_L(b)}",
        "KR-PLGT": "{#Super_L(c)}",
        "TK-PLGT": "{#Super_L(d)}",
        "EPLGT": "{#Super_L(e)}",
        "TP-PLGT": "{#Super_L(f)}",
        "TKPW-PLGT": "{#Super_L(g)}",
        "H-PLGT": "{#Super_L(h)}",
        "EUPLGT": "{#Super_L(i)}",
        "SKWR-PLGT": "{#Super_L(j)}",
        "K-PLGT": "{#Super_L(k)}",
        "HR-PLGT": "{#Super_L(l)}",
        "PH-PLGT": "{#Super_L(m)}",
        "TPH-PLGT": "{#Super_L(n)}",
        "OPLGT": "{#Super_L(o)}",
        "P-PLGT": "{#Super_L(p)}",
        "KW-PLGT": "{#Super_L(q)}",
        "R-PLGT": "{#Super_L(r)}",
        "S-PLGT": "{#Super_L(s)}",
        "T-PLGT": "{#Super_L(t)}",
        "UPLGT": "{#Super_L(u)}",
        "SR-PLGT": "{#Super_L(v)}",
        "W-PLGT": "{#Super_L(w)}",
        "KP-PLGT": "{#Super_L(x)}",
        "KWR-PLGT": "{#Super_L(y)}",
        "STKPW-PLGT": "{#Super_L(z)}",
        "1-78G9": "{#Super_L(F1)}",
        "2-78G9": "{#Super_L(F2)}",
        "3-78G9": "{#Super_L(F3)}",
        "4-78G9": "{#Super_L(F4)}",
        "12-78G9": "{#Super_L(F5)}",
        "23-78G9": "{#Super_L(F6)}",
        "34-78G9": "{#Super_L(F7)}",
        "123-78G9": "{#Super_L(F8)}",
        "234-78G9": "{#Super_L(F9)}",
        "14-78G9": "{#Super_L(F10)}",
        "13-78G9": "{#Super_L(F11)}",
        "24-78G9": "{#Super_L(F12)}",
        "STKP-P": "{#Super_L(up)}",
        "STKP-R": "{#Super_L(left)}",
        "STKP-B": "{#Super_L(down)}",
        "STKP-G": "{#Super_L(right)}",
        "STKP-RPG": "{#Super_L(page_up)}",
        "STKP-FBL": "{#Super_L(page_down)}",
        "STKP-FPL": "{#Super_L(home)}",
        "STKP-RBG": "{#Super_L(end)}",
        "STKP-RB": "{#Super_L(return)}",
        "STKP-F": "{#Super_L(backspace)}",
        "STKP-L": "{#Super_L(delete)}",
        "STKP-FR": "{#Super_L(escape)}",
        "STKP-LG": "{#Super_L(tab)}",
        "STKP-RP": "{#Super_L(slash)}",
        "STKP-PG": "{#Super_L(backslash)}",
        "STKW": "{#Control_L()}",
        "ABLGT": "{#Control_L(a)}",
        "PW-BLGT": "{#Control_L(b)}",
        "KR-BLGT": "{#Control_L(c)}",
        "TK-BLGT": "{#Control_L(d)}",
        "EBLGT": "{#Control_L(e)}",
        "TP-BLGT": "{#Control_L(f)}",
        "TKPW-BLGT": "{#Control_L(g)}",
        "H-BLGT": "{#Control_L(h)}",
        "EUBLGT": "{#Control_L(i)}",
        "SKWR-BLGT": "{#Control_L(j)}",
        "K-BLGT": "{#Control_L(k)}",
        "HR-BLGT": "{#Control_L(l)}",
        "PH-BLGT": "{#Control_L(m)}",
        "TPH-BLGT": "{#Control_L(n)}",
        "OBLGT": "{#Control_L(o)}",
        "P-BLGT": "{#Control_L(p)}",
        "KW-BLGT": "{#Control_L(q)}",
        "R-BLGT": "{#Control_L(r)}",
        "S-BLGT": "{#Control_L(s)}",
        "T-BLGT": "{#Control_L(t)}",
        "UBLGT": "{#Control_L(u)}",
        "SR-BLGT": "{#Control_L(v)}",
        "W-BLGT": "{#Control_L(w)}",
        "KP-BLGT": "{#Control_L(x)}",
        "KWR-BLGT": "{#Control_L(y)}",
        "STKPW-BLGT": "{#Control_L(z)}",
        "1-B8G9": "{#Control_L(F1)}",
        "2-B8G9": "{#Control_L(F2)}",
        "3-B8G9": "{#Control_L(F3)}",
        "4-B8G9": "{#Control_L(F4)}",
        "12-B8G9": "{#Control_L(F5)}",
        "23-B8G9": "{#Control_L(F6)}",
        "34-B8G9": "{#Control_L(F7)}",
        "123-B8G9": "{#Control_L(F8)}",
        "234-B8G9": "{#Control_L(F9)}",
        "14-B8G9": "{#Control_L(F10)}",
        "13-B8G9": "{#Control_L(F11)}",
        "24-B8G9": "{#Control_L(F12)}",
        "STKW-P": "{#Control_L(up)}",
        "STKW-R": "{#Control_L(left)}",
        "STKW-B": "{#Control_L(down)}",
        "STKW-G": "{#Control_L(right)}",
        "STKW-RPG": "{#Control_L(page_up)}",
        "STKW-FBL": "{#Control_L(page_down)}",
        "STKW-FPL": "{#Control_L(home)}",
        "STKW-RBG": "{#Control_L(end)}",
        "STKW-RB": "{#Control_L(return)}",
        "STKW-F": "{#Control_L(backspace)}",
        "STKW-L": "{#Control_L(delete)}",
        "STKW-FR": "{#Control_L(escape)}",
        "STKW-LG": "{#Control_L(tab)}",
        "STKW-RP": "{#Control_L(slash)}",
        "STKW-PG": "{#Control_L(backslash)}",
        "STKH": "{#Alt_L()}",
        "AFLGT": "{#Alt_L(a)}",
        "PW-FLGT": "{#Alt_L(b)}",
        "KR-FLGT": "{#Alt_L(c)}",
        "TK-FLGT": "{#Alt_L(d)}",
        "EFLGT": "{#Alt_L(e)}",
        "TP-FLGT": "{#Alt_L(f)}",
        "TKPW-FLGT": "{#Alt_L(g)}",
        "H-FLGT": "{#Alt_L(h)}",
        "EUFLGT": "{#Alt_L(i)}",
        "SKWR-FLGT": "{#Alt_L(j)}",
        "K-FLGT": "{#Alt_L(k)}",
        "HR-FLGT": "{#Alt_L(l)}",
        "PH-FLGT": "{#Alt_L(m)}",
        "TPH-FLGT": "{#Alt_L(n)}",
        "OFLGT": "{#Alt_L(o)}",
        "P-FLGT": "{#Alt_L(p)}",
        "KW-FLGT": "{#Alt_L(q)}",
        "R-FLGT": "{#Alt_L(r)}",
        "S-FLGT": "{#Alt_L(s)}",
        "T-FLGT": "{#Alt_L(t)}",
        "UFLGT": "{#Alt_L(u)}",
        "SR-FLGT": "{#Alt_L(v)}",
        "W-FLGT": "{#Alt_L(w)}",
        "KP-FLGT": "{#Alt_L(x)}",
        "KWR-FLGT": "{#Alt_L(y)}",
        "STKPW-FLGT": "{#Alt_L(z)}",
        "1-68G9": "{#Alt_L(F1)}",
        "2-68G9": "{#Alt_L(F2)}",
        "3-68G9": "{#Alt_L(F3)}",
        "4-68G9": "{#Alt_L(F4)}",
        "12-68G9": "{#Alt_L(F5)}",
        "23-68G9": "{#Alt_L(F6)}",
        "34-68G9": "{#Alt_L(F7)}",
        "123-68G9": "{#Alt_L(F8)}",
        "234-68G9": "{#Alt_L(F9)}",
        "14-68G9": "{#Alt_L(F10)}",
        "13-68G9": "{#Alt_L(F11)}",
        "24-68G9": "{#Alt_L(F12)}",
        "STKH-P": "{#Alt_L(up)}",
        "STKH-R": "{#Alt_L(left)}",
        "STKH-B": "{#Alt_L(down)}",
        "STKH-G": "{#Alt_L(right)}",
        "STKH-RPG": "{#Alt_L(page_up)}",
        "STKH-FBL": "{#Alt_L(page_down)}",
        "STKH-FPL": "{#Alt_L(home)}",
        "STKH-RBG": "{#Alt_L(end)}",
        "STKH-RB": "{#Alt_L(return)}",
        "STKH-F": "{#Alt_L(backspace)}",
        "STKH-L": "{#Alt_L(delete)}",
        "STKH-FR": "{#Alt_L(escape)}",
        "STKH-LG": "{#Alt_L(tab)}",
        "STKH-RP": "{#Alt_L(slash)}",
        "STKH-PG": "{#Alt_L(backslash)}",
        "STKR": "{#Shift_L()}",
        "ARLGT": "{#Shift_L(a)}",
        "PW-RLGT": "{#Shift_L(b)}",
        "KR-RLGT": "{#Shift_L(c)}",
        "TK-RLGT": "{#Shift_L(d)}",
        "ERLGT": "{#Shift_L(e)}",
        "TP-RLGT": "{#Shift_L(f)}",
        "TKPW-RLGT": "{#Shift_L(g)}",
        "H-RLGT": "{#Shift_L(h)}",
        "EURLGT": "{#Shift_L(i)}",
        "SKWR-RLGT": "{#Shift_L(j)}",
        "K-RLGT": "{#Shift_L(k)}",
        "HR-RLGT": "{#Shift_L(l)}",
        "PH-RLGT": "{#Shift_L(m)}",
        "TPH-RLGT": "{#Shift_L(n)}",
        "ORLGT": "{#Shift_L(o)}",
        "P-RLGT": "{#Shift_L(p)}",
        "KW-RLGT": "{#Shift_L(q)}",
        "R-RLGT": "{#Shift_L(r)}",
        "S-RLGT": "{#Shift_L(s)}",
        "T-RLGT": "{#Shift_L(t)}",
        "URLGT": "{#Shift_L(u)}",
        "SR-RLGT": "{#Shift_L(v)}",
        "W-RLGT": "{#Shift_L(w)}",
        "KP-RLGT": "{#Shift_L(x)}",
        "KWR-RLGT": "{#Shift_L(y)}",
        "STKPW-RLGT": "{#Shift_L(z)}",
        "1-R8G9": "{#Shift_L(F1)}",
        "2-R8G9": "{#Shift_L(F2)}",
        "3-R8G9": "{#Shift_L(F3)}",
        "4-R8G9": "{#Shift_L(F4)}",
        "12-R8G9": "{#Shift_L(F5)}",
        "23-R8G9": "{#Shift_L(F6)}",
        "34-R8G9": "{#Shift_L(F7)}",
        "123-R8G9": "{#Shift_L(F8)}",
        "234-R8G9": "{#Shift_L(F9)}",
        "14-R8G9": "{#Shift_L(F10)}",
        "13-R8G9": "{#Shift_L(F11)}",
        "24-R8G9": "{#Shift_L(F12)}",
        "STKR-P": "{#Shift_L(up)}",
        "STKR-R": "{#Shift_L(left)}",
        "STKR-B": "{#Shift_L(down)}",
        "STKR-G": "{#Shift_L(right)}",
        "STKR-RPG": "{#Shift_L(page_up)}",
        "STKR-FBL": "{#Shift_L(page_down)}",
        "STKR-FPL": "{#Shift_L(home)}",
        "STKR-RBG": "{#Shift_L(end)}",
        "STKR-RB": "{#Shift_L(return)}",
        "STKR-F": "{#Shift_L(backspace)}",
        "STKR-L": "{#Shift_L(delete)}",
        "STKR-FR": "{#Shift_L(escape)}",
        "STKR-LG": "{#Shift_L(tab)}",
        "STKR-RP": "{#Shift_L(slash)}",
        "STKR-PG": "{#Shift_L(backslash)}",
        "STKPW": "{#Super_L(Control_L())}",
        "APBLGT": "{#Super_L(Control_L(a))}",
        "PW-PBLGT": "{#Super_L(Control_L(b))}",
        "KR-PBLGT": "{#Super_L(Control_L(c))}",
        "TK-PBLGT": "{#Super_L(Control_L(d))}",
        "EPBLGT": "{#Super_L(Control_L(e))}",
        "TP-PBLGT": "{#Super_L(Control_L(f))}",
        "TKPW-PBLGT": "{#Super_L(Control_L(g))}",
        "H-PBLGT": "{#Super_L(Control_L(h))}",
        "EUPBLGT": "{#Super_L(Control_L(i))}",
        "SKWR-PBLGT": "{#Super_L(Control_L(j))}",
        "K-PBLGT": "{#Super_L(Control_L(k))}",
        "HR-PBLGT": "{#Super_L(Control_L(l))}",
        "PH-PBLGT": "{#Super_L(Control_L(m))}",
        "TPH-PBLGT": "{#Super_L(Control_L(n))}",
        "OPBLGT": "{#Super_L(Control_L(o))}",
        "P-PBLGT": "{#Super_L(Control_L(p))}",
        "KW-PBLGT": "{#Super_L(Control_L(q))}",
        "R-PBLGT": "{#Super_L(Control_L(r))}",
        "S-PBLGT": "{#Super_L(Control_L(s))}",
        "T-PBLGT": "{#Super_L(Control_L(t))}",
        "UPBLGT": "{#Super_L(Control_L(u))}",
        "SR-PBLGT": "{#Super_L(Control_L(v))}",
        "W-PBLGT": "{#Super_L(Control_L(w))}",
        "KP-PBLGT": "{#Super_L(Control_L(x))}",
        "KWR-PBLGT": "{#Super_L(Control_L(y))}",
        "STKPW-PBLGT": "{#Super_L(Control_L(z))}",
        "1-7B8G9": "{#Super_L(Control_L(F1))}",
        "2-7B8G9": "{#Super_L(Control_L(F2))}",
        "3-7B8G9": "{#Super_L(Control_L(F3))}",
        "4-7B8G9": "{#Super_L(Control_L(F4))}",
        "12-7B8G9": "{#Super_L(Control_L(F5))}",
        "23-7B8G9": "{#Super_L(Control_L(F6))}",
        "34-7B8G9": "{#Super_L(Control_L(F7))}",
        "123-7B8G9": "{#Super_L(Control_L(F8))}",
        "234-7B8G9": "{#Super_L(Control_L(F9))}",
        "14-7B8G9": "{#Super_L(Control_L(F10))}",
        "13-7B8G9": "{#Super_L(Control_L(F11))}",
        "24-7B8G9": "{#Super_L(Control_L(F12))}",
        "STKPW-P": "{#Super_L(Control_L(up))}",
        "STKPW-R": "{#Super_L(Control_L(left))}",
        "STKPW-B": "{#Super_L(Control_L(down))}",
        "STKPW-G": "{#Super_L(Control_L(right))}",
        "STKPW-RPG": "{#Super_L(Control_L(page_up))}",
        "STKPW-FBL": "{#Super_L(Control_L(page_down))}",
        "STKPW-FPL": "{#Super_L(Control_L(home))}",
        "STKPW-RBG": "{#Super_L(Control_L(end))}",
        "STKPW-RB": "{#Super_L(Control_L(return))}",
        "STKPW-F": "{#Super_L(Control_L(backspace))}",
        "STKPW-L": "{#Super_L(Control_L(delete))}",
        "STKPW-FR": "{#Super_L(Control_L(escape))}",
        "STKPW-LG": "{#Super_L(Control_L(tab))}",
        "STKPW-RP": "{#Super_L(Control_L(slash))}",
        "STKPW-PG": "{#Super_L(Control_L(backslash))}",
        "STKPH": "{#Super_L(Alt_L())}",
        "AFPLGT": "{#Super_L(Alt_L(a))}",
        "PW-FPLGT": "{#Super_L(Alt_L(b))}",
        "KR-FPLGT": "{#Super_L(Alt_L(c))}",
        "TK-FPLGT": "{#Super_L(Alt_L(d))}",
        "EFPLGT": "{#Super_L(Alt_L(e))}",
        "TP-FPLGT": "{#Super_L(Alt_L(f))}",
        "TKPW-FPLGT": "{#Super_L(Alt_L(g))}",
        "H-FPLGT": "{#Super_L(Alt_L(h))}",
        "EUFPLGT": "{#Super_L(Alt_L(i))}",
        "SKWR-FPLGT": "{#Super_L(Alt_L(j))}",
        "K-FPLGT": "{#Super_L(Alt_L(k))}",
        "HR-FPLGT": "{#Super_L(Alt_L(l))}",
        "PH-FPLGT": "{#Super_L(Alt_L(m))}",
        "TPH-FPLGT": "{#Super_L(Alt_L(n))}",
        "OFPLGT": "{#Super_L(Alt_L(o))}",
        "P-FPLGT": "{#Super_L(Alt_L(p))}",
        "KW-FPLGT": "{#Super_L(Alt_L(q))}",
        "R-FPLGT": "{#Super_L(Alt_L(r))}",
        "S-FPLGT": "{#Super_L(Alt_L(s))}",
        "T-FPLGT": "{#Super_L(Alt_L(t))}",
        "UFPLGT": "{#Super_L(Alt_L(u))}",
        "SR-FPLGT": "{#Super_L(Alt_L(v))}",
        "W-FPLGT": "{#Super_L(Alt_L(w))}",
        "KP-FPLGT": "{#Super_L(Alt_L(x))}",
        "KWR-FPLGT": "{#Super_L(Alt_L(y))}",
        "STKPW-FPLGT": "{#Super_L(Alt_L(z))}",
        "1-678G9": "{#Super_L(Alt_L(F1))}",
        "2-678G9": "{#Super_L(Alt_L(F2))}",
        "3-678G9": "{#Super_L(Alt_L(F3))}",
        "4-678G9": "{#Super_L(Alt_L(F4))}",
        "12-678G9": "{#Super_L(Alt_L(F5))}",
        "23-678G9": "{#Super_L(Alt_L(F6))}",
        "34-678G9": "{#Super_L(Alt_L(F7))}",
        "123-678G9": "{#Super_L(Alt_L(F8))}",
        "234-678G9": "{#Super_L(Alt_L(F9))}",
        "14-678G9": "{#Super_L(Alt_L(F10))}",
        "13-678G9": "{#Super_L(Alt_L(F11))}",
        "24-678G9": "{#Super_L(Alt_L(F12))}",
        "STKPH-P": "{#Super_L(Alt_L(up))}",
        "STKPH-R": "{#Super_L(Alt_L(left))}",
        "STKPH-B": "{#Super_L(Alt_L(down))}",
        "STKPH-G": "{#Super_L(Alt_L(right))}",
        "STKPH-RPG": "{#Super_L(Alt_L(page_up))}",
        "STKPH-FBL": "{#Super_L(Alt_L(page_down))}",
        "STKPH-FPL": "{#Super_L(Alt_L(home))}",
        "STKPH-RBG": "{#Super_L(Alt_L(end))}",
        "STKPH-RB": "{#Super_L(Alt_L(return))}",
        "STKPH-F": "{#Super_L(Alt_L(backspace))}",
        "STKPH-L": "{#Super_L(Alt_L(delete))}",
        "STKPH-FR": "{#Super_L(Alt_L(escape))}",
        "STKPH-LG": "{#Super_L(Alt_L(tab))}",
        "STKPH-RP": "{#Super_L(Alt_L(slash))}",
        "STKPH-PG": "{#Super_L(Alt_L(backslash))}",
        "STKPR": "{#Super_L(Shift_L())}",
        "ARPLGT": "{#Super_L(Shift_L(a))}",
        "PW-RPLGT": "{#Super_L(Shift_L(b))}",
        "KR-RPLGT": "{#Super_L(Shift_L(c))}",
        "TK-RPLGT": "{#Super_L(Shift_L(d))}",
        "ERPLGT": "{#Super_L(Shift_L(e))}",
        "TP-RPLGT": "{#Super_L(Shift_L(f))}",
        "TKPW-RPLGT": "{#Super_L(Shift_L(g))}",
        "H-RPLGT": "{#Super_L(Shift_L(h))}",
        "EURPLGT": "{#Super_L(Shift_L(i))}",
        "SKWR-RPLGT": "{#Super_L(Shift_L(j))}",
        "K-RPLGT": "{#Super_L(Shift_L(k))}",
        "HR-RPLGT": "{#Super_L(Shift_L(l))}",
        "PH-RPLGT": "{#Super_L(Shift_L(m))}",
        "TPH-RPLGT": "{#Super_L(Shift_L(n))}",
        "ORPLGT": "{#Super_L(Shift_L(o))}",
        "P-RPLGT": "{#Super_L(Shift_L(p))}",
        "KW-RPLGT": "{#Super_L(Shift_L(q))}",
        "R-RPLGT": "{#Super_L(Shift_L(r))}",
        "S-RPLGT": "{#Super_L(Shift_L(s))}",
        "T-RPLGT": "{#Super_L(Shift_L(t))}",
        "URPLGT": "{#Super_L(Shift_L(u))}",
        "SR-RPLGT": "{#Super_L(Shift_L(v))}",
        "W-RPLGT": "{#Super_L(Shift_L(w))}",
        "KP-RPLGT": "{#Super_L(Shift_L(x))}",
        "KWR-RPLGT": "{#Super_L(Shift_L(y))}",
        "STKPW-RPLGT": "{#Super_L(Shift_L(z))}",
        "1-R78G9": "{#Super_L(Shift_L(F1))}",
        "2-R78G9": "{#Super_L(Shift_L(F2))}",
        "3-R78G9": "{#Super_L(Shift_L(F3))}",
        "4-R78G9": "{#Super_L(Shift_L(F4))}",
        "12-R78G9": "{#Super_L(Shift_L(F5))}",
        "23-R78G9": "{#Super_L(Shift_L(F6))}",
        "34-R78G9": "{#Super_L(Shift_L(F7))}",
        "123-R78G9": "{#Super_L(Shift_L(F8))}",
        "234-R78G9": "{#Super_L(Shift_L(F9))}",
        "14-R78G9": "{#Super_L(Shift_L(F10))}",
        "13-R78G9": "{#Super_L(Shift_L(F11))}",
        "24-R78G9": "{#Super_L(Shift_L(F12))}",
        "STKPR-P": "{#Super_L(Shift_L(up))}",
        "STKPR-R": "{#Super_L(Shift_L(left))}",
        "STKPR-B": "{#Super_L(Shift_L(down))}",
        "STKPR-G": "{#Super_L(Shift_L(right))}",
        "STKPR-RPG": "{#Super_L(Shift_L(page_up))}",
        "STKPR-FBL": "{#Super_L(Shift_L(page_down))}",
        "STKPR-FPL": "{#Super_L(Shift_L(home))}",
        "STKPR-RBG": "{#Super_L(Shift_L(end))}",
        "STKPR-RB": "{#Super_L(Shift_L(return))}",
        "STKPR-F": "{#Super_L(Shift_L(backspace))}",
        "STKPR-L": "{#Super_L(Shift_L(delete))}",
        "STKPR-FR": "{#Super_L(Shift_L(escape))}",
        "STKPR-LG": "{#Super_L(Shift_L(tab))}",
        "STKPR-RP": "{#Super_L(Shift_L(slash))}",
        "STKPR-PG": "{#Super_L(Shift_L(backslash))}",
        "STKWH": "{#Control_L(Alt_L())}",
        "AFBLGT": "{#Control_L(Alt_L(a))}",
        "PW-FBLGT": "{#Control_L(Alt_L(b))}",
        "KR-FBLGT": "{#Control_L(Alt_L(c))}",
        "TK-FBLGT": "{#Control_L(Alt_L(d))}",
        "EFBLGT": "{#Control_L(Alt_L(e))}",
        "TP-FBLGT": "{#Control_L(Alt_L(f))}",
        "TKPW-FBLGT": "{#Control_L(Alt_L(g))}",
        "H-FBLGT": "{#Control_L(Alt_L(h))}",
        "EUFBLGT": "{#Control_L(Alt_L(i))}",
        "SKWR-FBLGT": "{#Control_L(Alt_L(j))}",
        "K-FBLGT": "{#Control_L(Alt_L(k))}",
        "HR-FBLGT": "{#Control_L(Alt_L(l))}",
        "PH-FBLGT": "{#Control_L(Alt_L(m))}",
        "TPH-FBLGT": "{#Control_L(Alt_L(n))}",
        "OFBLGT": "{#Control_L(Alt_L(o))}",
        "P-FBLGT": "{#Control_L(Alt_L(p))}",
        "KW-FBLGT": "{#Control_L(Alt_L(q))}",
        "R-FBLGT": "{#Control_L(Alt_L(r))}",
        "S-FBLGT": "{#Control_L(Alt_L(s))}",
        "T-FBLGT": "{#Control_L(Alt_L(t))}",
        "UFBLGT": "{#Control_L(Alt_L(u))}",
        "SR-FBLGT": "{#Control_L(Alt_L(v))}",
        "W-FBLGT": "{#Control_L(Alt_L(w))}",
        "KP-FBLGT": "{#Control_L(Alt_L(x))}",
        "KWR-FBLGT": "{#Control_L(Alt_L(y))}",
        "STKPW-FBLGT": "{#Control_L(Alt_L(z))}",
        "1-6B8G9": "{#Control_L(Alt_L(F1))}",
        "2-6B8G9": "{#Control_L(Alt_L(F2))}",
        "3-6B8G9": "{#Control_L(Alt_L(F3))}",
        "4-6B8G9": "{#Control_L(Alt_L(F4))}",
        "12-6B8G9": "{#Control_L(Alt_L(F5))}",
        "23-6B8G9": "{#Control_L(Alt_L(F6))}",
        "34-6B8G9": "{#Control_L(Alt_L(F7))}",
        "123-6B8G9": "{#Control_L(Alt_L(F8))}",
        "234-6B8G9": "{#Control_L(Alt_L(F9))}",
        "14-6B8G9": "{#Control_L(Alt_L(F10))}",
        "13-6B8G9": "{#Control_L(Alt_L(F11))}",
        "24-6B8G9": "{#Control_L(Alt_L(F12))}",
        "STKWH-P": "{#Control_L(Alt_L(up))}",
        "STKWH-R": "{#Control_L(Alt_L(left))}",
        "STKWH-B": "{#Control_L(Alt_L(down))}",
        "STKWH-G": "{#Control_L(Alt_L(right))}",
        "STKWH-RPG": "{#Control_L(Alt_L(page_up))}",
        "STKWH-FBL": "{#Control_L(Alt_L(page_down))}",
        "STKWH-FPL": "{#Control_L(Alt_L(home))}",
        "STKWH-RBG": "{#Control_L(Alt_L(end))}",
        "STKWH-RB": "{#Control_L(Alt_L(return))}",
        "STKWH-F": "{#Control_L(Alt_L(backspace))}",
        "STKWH-L": "{#Control_L(Alt_L(delete))}",
        "STKWH-FR": "{#Control_L(Alt_L(escape))}",
        "STKWH-LG": "{#Control_L(Alt_L(tab))}",
        "STKWH-RP": "{#Control_L(Alt_L(slash))}",
        "STKWH-PG": "{#Control_L(Alt_L(backslash))}",
        "STKWR": "{#Control_L(Shift_L())}",
        "ARBLGT": "{#Control_L(Shift_L(a))}",
        "PW-RBLGT": "{#Control_L(Shift_L(b))}",
        "KR-RBLGT": "{#Control_L(Shift_L(c))}",
        "TK-RBLGT": "{#Control_L(Shift_L(d))}",
        "ERBLGT": "{#Control_L(Shift_L(e))}",
        "TP-RBLGT": "{#Control_L(Shift_L(f))}",
        "TKPW-RBLGT": "{#Control_L(Shift_L(g))}",
        "H-RBLGT": "{#Control_L(Shift_L(h))}",
        "EURBLGT": "{#Control_L(Shift_L(i))}",
        "SKWR-RBLGT": "{#Control_L(Shift_L(j))}",
        "K-RBLGT": "{#Control_L(Shift_L(k))}",
        "HR-RBLGT": "{#Control_L(Shift_L(l))}",
        "PH-RBLGT": "{#Control_L(Shift_L(m))}",
        "TPH-RBLGT": "{#Control_L(Shift_L(n))}",
        "ORBLGT": "{#Control_L(Shift_L(o))}",
        "P-RBLGT": "{#Control_L(Shift_L(p))}",
        "KW-RBLGT": "{#Control_L(Shift_L(q))}",
        "R-RBLGT": "{#Control_L(Shift_L(r))}",
        "S-RBLGT": "{#Control_L(Shift_L(s))}",
        "T-RBLGT": "{#Control_L(Shift_L(t))}",
        "URBLGT": "{#Control_L(Shift_L(u))}",
        "SR-RBLGT": "{#Control_L(Shift_L(v))}",
        "W-RBLGT": "{#Control_L(Shift_L(w))}",
        "KP-RBLGT": "{#Control_L(Shift_L(x))}",
        "KWR-RBLGT": "{#Control_L(Shift_L(y))}",
        "STKPW-RBLGT": "{#Control_L(Shift_L(z))}",
        "1-RB8G9": "{#Control_L(Shift_L(F1))}",
        "2-RB8G9": "{#Control_L(Shift_L(F2))}",
        "3-RB8G9": "{#Control_L(Shift_L(F3))}",
        "4-RB8G9": "{#Control_L(Shift_L(F4))}",
        "12-RB8G9": "{#Control_L(Shift_L(F5))}",
        "23-RB8G9": "{#Control_L(Shift_L(F6))}",
        "34-RB8G9": "{#Control_L(Shift_L(F7))}",
        "123-RB8G9": "{#Control_L(Shift_L(F8))}",
        "234-RB8G9": "{#Control_L(Shift_L(F9))}",
        "14-RB8G9": "{#Control_L(Shift_L(F10))}",
        "13-RB8G9": "{#Control_L(Shift_L(F11))}",
        "24-RB8G9": "{#Control_L(Shift_L(F12))}",
        "STKWR-P": "{#Control_L(Shift_L(up))}",
        "STKWR-R": "{#Control_L(Shift_L(left))}",
        "STKWR-B": "{#Control_L(Shift_L(down))}",
        "STKWR-G": "{#Control_L(Shift_L(right))}",
        "STKWR-RPG": "{#Control_L(Shift_L(page_up))}",
        "STKWR-FBL": "{#Control_L(Shift_L(page_down))}",
        "STKWR-FPL": "{#Control_L(Shift_L(home))}",
        "STKWR-RBG": "{#Control_L(Shift_L(end))}",
        "STKWR-RB": "{#Control_L(Shift_L(return))}",
        "STKWR-F": "{#Control_L(Shift_L(backspace))}",
        "STKWR-L": "{#Control_L(Shift_L(delete))}",
        "STKWR-FR": "{#Control_L(Shift_L(escape))}",
        "STKWR-LG": "{#Control_L(Shift_L(tab))}",
        "STKWR-RP": "{#Control_L(Shift_L(slash))}",
        "STKWR-PG": "{#Control_L(Shift_L(backslash))}",
        "STKHR": "{#Alt_L(Shift_L())}",
        "AFRLGT": "{#Alt_L(Shift_L(a))}",
        "PW-FRLGT": "{#Alt_L(Shift_L(b))}",
        "KR-FRLGT": "{#Alt_L(Shift_L(c))}",
        "TK-FRLGT": "{#Alt_L(Shift_L(d))}",
        "EFRLGT": "{#Alt_L(Shift_L(e))}",
        "TP-FRLGT": "{#Alt_L(Shift_L(f))}",
        "TKPW-FRLGT": "{#Alt_L(Shift_L(g))}",
        "H-FRLGT": "{#Alt_L(Shift_L(h))}",
        "EUFRLGT": "{#Alt_L(Shift_L(i))}",
        "SKWR-FRLGT": "{#Alt_L(Shift_L(j))}",
        "K-FRLGT": "{#Alt_L(Shift_L(k))}",
        "HR-FRLGT": "{#Alt_L(Shift_L(l))}",
        "PH-FRLGT": "{#Alt_L(Shift_L(m))}",
        "TPH-FRLGT": "{#Alt_L(Shift_L(n))}",
        "OFRLGT": "{#Alt_L(Shift_L(o))}",
        "P-FRLGT": "{#Alt_L(Shift_L(p))}",
        "KW-FRLGT": "{#Alt_L(Shift_L(q))}",
        "R-FRLGT": "{#Alt_L(Shift_L(r))}",
        "S-FRLGT": "{#Alt_L(Shift_L(s))}",
        "T-FRLGT": "{#Alt_L(Shift_L(t))}",
        "UFRLGT": "{#Alt_L(Shift_L(u))}",
        "SR-FRLGT": "{#Alt_L(Shift_L(v))}",
        "W-FRLGT": "{#Alt_L(Shift_L(w))}",
        "KP-FRLGT": "{#Alt_L(Shift_L(x))}",
        "KWR-FRLGT": "{#Alt_L(Shift_L(y))}",
        "STKPW-FRLGT": "{#Alt_L(Shift_L(z))}",
        "1-6R8G9": "{#Alt_L(Shift_L(F1))}",
        "2-6R8G9": "{#Alt_L(Shift_L(F2))}",
        "3-6R8G9": "{#Alt_L(Shift_L(F3))}",
        "4-6R8G9": "{#Alt_L(Shift_L(F4))}",
        "12-6R8G9": "{#Alt_L(Shift_L(F5))}",
        "23-6R8G9": "{#Alt_L(Shift_L(F6))}",
        "34-6R8G9": "{#Alt_L(Shift_L(F7))}",
        "123-6R8G9": "{#Alt_L(Shift_L(F8))}",
        "234-6R8G9": "{#Alt_L(Shift_L(F9))}",
        "14-6R8G9": "{#Alt_L(Shift_L(F10))}",
        "13-6R8G9": "{#Alt_L(Shift_L(F11))}",
        "24-6R8G9": "{#Alt_L(Shift_L(F12))}",
        "STKHR-P": "{#Alt_L(Shift_L(up))}",
        "STKHR-R": "{#Alt_L(Shift_L(left))}",
        "STKHR-B": "{#Alt_L(Shift_L(down))}",
        "STKHR-G": "{#Alt_L(Shift_L(right))}",
        "STKHR-RPG": "{#Alt_L(Shift_L(page_up))}",
        "STKHR-FBL": "{#Alt_L(Shift_L(page_down))}",
        "STKHR-FPL": "{#Alt_L(Shift_L(home))}",
        "STKHR-RBG": "{#Alt_L(Shift_L(end))}",
        "STKHR-RB": "{#Alt_L(Shift_L(return))}",
        "STKHR-F": "{#Alt_L(Shift_L(backspace))}",
        "STKHR-L": "{#Alt_L(Shift_L(delete))}",
        "STKHR-FR": "{#Alt_L(Shift_L(escape))}",
        "STKHR-LG": "{#Alt_L(Shift_L(tab))}",
        "STKHR-RP": "{#Alt_L(Shift_L(slash))}",
        "STKHR-PG": "{#Alt_L(Shift_L(backslash))}",
        "STKPWH": "{#Super_L(Control_L(Alt_L()))}",
        "AFPBLGT": "{#Super_L(Control_L(Alt_L(a)))}",
        "PW-FPBLGT": "{#Super_L(Control_L(Alt_L(b)))}",
        "KR-FPBLGT": "{#Super_L(Control_L(Alt_L(c)))}",
        "TK-FPBLGT": "{#Super_L(Control_L(Alt_L(d)))}",
        "EFPBLGT": "{#Super_L(Control_L(Alt_L(e)))}",
        "TP-FPBLGT": "{#Super_L(Control_L(Alt_L(f)))}",
        "TKPW-FPBLGT": "{#Super_L(Control_L(Alt_L(g)))}",
        "H-FPBLGT": "{#Super_L(Control_L(Alt_L(h)))}",
        "EUFPBLGT": "{#Super_L(Control_L(Alt_L(i)))}",
        "SKWR-FPBLGT": "{#Super_L(Control_L(Alt_L(j)))}",
        "K-FPBLGT": "{#Super_L(Control_L(Alt_L(k)))}",
        "HR-FPBLGT": "{#Super_L(Control_L(Alt_L(l)))}",
        "PH-FPBLGT": "{#Super_L(Control_L(Alt_L(m)))}",
        "TPH-FPBLGT": "{#Super_L(Control_L(Alt_L(n)))}",
        "OFPBLGT": "{#Super_L(Control_L(Alt_L(o)))}",
        "P-FPBLGT": "{#Super_L(Control_L(Alt_L(p)))}",
        "KW-FPBLGT": "{#Super_L(Control_L(Alt_L(q)))}",
        "R-FPBLGT": "{#Super_L(Control_L(Alt_L(r)))}",
        "S-FPBLGT": "{#Super_L(Control_L(Alt_L(s)))}",
        "T-FPBLGT": "{#Super_L(Control_L(Alt_L(t)))}",
        "UFPBLGT": "{#Super_L(Control_L(Alt_L(u)))}",
        "SR-FPBLGT": "{#Super_L(Control_L(Alt_L(v)))}",
        "W-FPBLGT": "{#Super_L(Control_L(Alt_L(w)))}",
        "KP-FPBLGT": "{#Super_L(Control_L(Alt_L(x)))}",
        "KWR-FPBLGT": "{#Super_L(Control_L(Alt_L(y)))}",
        "STKPW-FPBLGT": "{#Super_L(Control_L(Alt_L(z)))}",
        "1-67B8G9": "{#Super_L(Control_L(Alt_L(F1)))}",
        "2-67B8G9": "{#Super_L(Control_L(Alt_L(F2)))}",
        "3-67B8G9": "{#Super_L(Control_L(Alt_L(F3)))}",
        "4-67B8G9": "{#Super_L(Control_L(Alt_L(F4)))}",
        "12-67B8G9": "{#Super_L(Control_L(Alt_L(F5)))}",
        "23-67B8G9": "{#Super_L(Control_L(Alt_L(F6)))}",
        "34-67B8G9": "{#Super_L(Control_L(Alt_L(F7)))}",
        "123-67B8G9": "{#Super_L(Control_L(Alt_L(F8)))}",
        "234-67B8G9": "{#Super_L(Control_L(Alt_L(F9)))}",
        "14-67B8G9": "{#Super_L(Control_L(Alt_L(F10)))}",
        "13-67B8G9": "{#Super_L(Control_L(Alt_L(F11)))}",
        "24-67B8G9": "{#Super_L(Control_L(Alt_L(F12)))}",
        "STKPWH-P": "{#Super_L(Control_L(Alt_L(up)))}",
        "STKPWH-R": "{#Super_L(Control_L(Alt_L(left)))}",
        "STKPWH-B": "{#Super_L(Control_L(Alt_L(down)))}",
        "STKPWH-G": "{#Super_L(Control_L(Alt_L(right)))}",
        "STKPWH-RPG": "{#Super_L(Control_L(Alt_L(page_up)))}",
        "STKPWH-FBL": "{#Super_L(Control_L(Alt_L(page_down)))}",
        "STKPWH-FPL": "{#Super_L(Control_L(Alt_L(home)))}",
        "STKPWH-RBG": "{#Super_L(Control_L(Alt_L(end)))}",
        "STKPWH-RB": "{#Super_L(Control_L(Alt_L(return)))}",
        "STKPWH-F": "{#Super_L(Control_L(Alt_L(backspace)))}",
        "STKPWH-L": "{#Super_L(Control_L(Alt_L(delete)))}",
        "STKPWH-FR": "{#Super_L(Control_L(Alt_L(escape)))}",
        "STKPWH-LG": "{#Super_L(Control_L(Alt_L(tab)))}",
        "STKPWH-RP": "{#Super_L(Control_L(Alt_L(slash)))}",
        "STKPWH-PG": "{#Super_L(Control_L(Alt_L(backslash)))}",
        "STKPWR": "{#Super_L(Control_L(Shift_L()))}",
        "ARPBLGT": "{#Super_L(Control_L(Shift_L(a)))}",
        "PW-RPBLGT": "{#Super_L(Control_L(Shift_L(b)))}",
        "KR-RPBLGT": "{#Super_L(Control_L(Shift_L(c)))}",
        "TK-RPBLGT": "{#Super_L(Control_L(Shift_L(d)))}",
        "ERPBLGT": "{#Super_L(Control_L(Shift_L(e)))}",
        "TP-RPBLGT": "{#Super_L(Control_L(Shift_L(f)))}",
        "TKPW-RPBLGT": "{#Super_L(Control_L(Shift_L(g)))}",
        "H-RPBLGT": "{#Super_L(Control_L(Shift_L(h)))}",
        "EURPBLGT": "{#Super_L(Control_L(Shift_L(i)))}",
        "SKWR-RPBLGT": "{#Super_L(Control_L(Shift_L(j)))}",
        "K-RPBLGT": "{#Super_L(Control_L(Shift_L(k)))}",
        "HR-RPBLGT": "{#Super_L(Control_L(Shift_L(l)))}",
        "PH-RPBLGT": "{#Super_L(Control_L(Shift_L(m)))}",
        "TPH-RPBLGT": "{#Super_L(Control_L(Shift_L(n)))}",
        "ORPBLGT": "{#Super_L(Control_L(Shift_L(o)))}",
        "P-RPBLGT": "{#Super_L(Control_L(Shift_L(p)))}",
        "KW-RPBLGT": "{#Super_L(Control_L(Shift_L(q)))}",
        "R-RPBLGT": "{#Super_L(Control_L(Shift_L(r)))}",
        "S-RPBLGT": "{#Super_L(Control_L(Shift_L(s)))}",
        "T-RPBLGT": "{#Super_L(Control_L(Shift_L(t)))}",
        "URPBLGT": "{#Super_L(Control_L(Shift_L(u)))}",
        "SR-RPBLGT": "{#Super_L(Control_L(Shift_L(v)))}",
        "W-RPBLGT": "{#Super_L(Control_L(Shift_L(w)))}",
        "KP-RPBLGT": "{#Super_L(Control_L(Shift_L(x)))}",
        "KWR-RPBLGT": "{#Super_L(Control_L(Shift_L(y)))}",
        "STKPW-RPBLGT": "{#Super_L(Control_L(Shift_L(z)))}",
        "1-R7B8G9": "{#Super_L(Control_L(Shift_L(F1)))}",
        "2-R7B8G9": "{#Super_L(Control_L(Shift_L(F2)))}",
        "3-R7B8G9": "{#Super_L(Control_L(Shift_L(F3)))}",
        "4-R7B8G9": "{#Super_L(Control_L(Shift_L(F4)))}",
        "12-R7B8G9": "{#Super_L(Control_L(Shift_L(F5)))}",
        "23-R7B8G9": "{#Super_L(Control_L(Shift_L(F6)))}",
        "34-R7B8G9": "{#Super_L(Control_L(Shift_L(F7)))}",
        "123-R7B8G9": "{#Super_L(Control_L(Shift_L(F8)))}",
        "234-R7B8G9": "{#Super_L(Control_L(Shift_L(F9)))}",
        "14-R7B8G9": "{#Super_L(Control_L(Shift_L(F10)))}",
        "13-R7B8G9": "{#Super_L(Control_L(Shift_L(F11)))}",
        "24-R7B8G9": "{#Super_L(Control_L(Shift_L(F12)))}",
        "STKPWR-P": "{#Super_L(Control_L(Shift_L(up)))}",
        "STKPWR-R": "{#Super_L(Control_L(Shift_L(left)))}",
        "STKPWR-B": "{#Super_L(Control_L(Shift_L(down)))}",
        "STKPWR-G": "{#Super_L(Control_L(Shift_L(right)))}",
        "STKPWR-RPG": "{#Super_L(Control_L(Shift_L(page_up)))}",
        "STKPWR-FBL": "{#Super_L(Control_L(Shift_L(page_down)))}",
        "STKPWR-FPL": "{#Super_L(Control_L(Shift_L(home)))}",
        "STKPWR-RBG": "{#Super_L(Control_L(Shift_L(end)))}",
        "STKPWR-RB": "{#Super_L(Control_L(Shift_L(return)))}",
        "STKPWR-F": "{#Super_L(Control_L(Shift_L(backspace)))}",
        "STKPWR-L": "{#Super_L(Control_L(Shift_L(delete)))}",
        "STKPWR-FR": "{#Super_L(Control_L(Shift_L(escape)))}",
        "STKPWR-LG": "{#Super_L(Control_L(Shift_L(tab)))}",
        "STKPWR-RP": "{#Super_L(Control_L(Shift_L(slash)))}",
        "STKPWR-PG": "{#Super_L(Control_L(Shift_L(backslash)))}",
        "STKPHR": "{#Super_L(Alt_L(Shift_L()))}",
        "AFRPLGT": "{#Super_L(Alt_L(Shift_L(a)))}",
        "PW-FRPLGT": "{#Super_L(Alt_L(Shift_L(b)))}",
        "KR-FRPLGT": "{#Super_L(Alt_L(Shift_L(c)))}",
        "TK-FRPLGT": "{#Super_L(Alt_L(Shift_L(d)))}",
        "EFRPLGT": "{#Super_L(Alt_L(Shift_L(e)))}",
        "TP-FRPLGT": "{#Super_L(Alt_L(Shift_L(f)))}",
        "TKPW-FRPLGT": "{#Super_L(Alt_L(Shift_L(g)))}",
        "H-FRPLGT": "{#Super_L(Alt_L(Shift_L(h)))}",
        "EUFRPLGT": "{#Super_L(Alt_L(Shift_L(i)))}",
        "SKWR-FRPLGT": "{#Super_L(Alt_L(Shift_L(j)))}",
        "K-FRPLGT": "{#Super_L(Alt_L(Shift_L(k)))}",
        "HR-FRPLGT": "{#Super_L(Alt_L(Shift_L(l)))}",
        "PH-FRPLGT": "{#Super_L(Alt_L(Shift_L(m)))}",
        "TPH-FRPLGT": "{#Super_L(Alt_L(Shift_L(n)))}",
        "OFRPLGT": "{#Super_L(Alt_L(Shift_L(o)))}",
        "P-FRPLGT": "{#Super_L(Alt_L(Shift_L(p)))}",
        "KW-FRPLGT": "{#Super_L(Alt_L(Shift_L(q)))}",
        "R-FRPLGT": "{#Super_L(Alt_L(Shift_L(r)))}",
        "S-FRPLGT": "{#Super_L(Alt_L(Shift_L(s)))}",
        "T-FRPLGT": "{#Super_L(Alt_L(Shift_L(t)))}",
        "UFRPLGT": "{#Super_L(Alt_L(Shift_L(u)))}",
        "SR-FRPLGT": "{#Super_L(Alt_L(Shift_L(v)))}",
        "W-FRPLGT": "{#Super_L(Alt_L(Shift_L(w)))}",
        "KP-FRPLGT": "{#Super_L(Alt_L(Shift_L(x)))}",
        "KWR-FRPLGT": "{#Super_L(Alt_L(Shift_L(y)))}",
        "STKPW-FRPLGT": "{#Super_L(Alt_L(Shift_L(z)))}",
        "1-6R78G9": "{#Super_L(Alt_L(Shift_L(F1)))}",
        "2-6R78G9": "{#Super_L(Alt_L(Shift_L(F2)))}",
        "3-6R78G9": "{#Super_L(Alt_L(Shift_L(F3)))}",
        "4-6R78G9": "{#Super_L(Alt_L(Shift_L(F4)))}",
        "12-6R78G9": "{#Super_L(Alt_L(Shift_L(F5)))}",
        "23-6R78G9": "{#Super_L(Alt_L(Shift_L(F6)))}",
        "34-6R78G9": "{#Super_L(Alt_L(Shift_L(F7)))}",
        "123-6R78G9": "{#Super_L(Alt_L(Shift_L(F8)))}",
        "234-6R78G9": "{#Super_L(Alt_L(Shift_L(F9)))}",
        "14-6R78G9": "{#Super_L(Alt_L(Shift_L(F10)))}",
        "13-6R78G9": "{#Super_L(Alt_L(Shift_L(F11)))}",
        "24-6R78G9": "{#Super_L(Alt_L(Shift_L(F12)))}",
        "STKPHR-P": "{#Super_L(Alt_L(Shift_L(up)))}",
        "STKPHR-R": "{#Super_L(Alt_L(Shift_L(left)))}",
        "STKPHR-B": "{#Super_L(Alt_L(Shift_L(down)))}",
        "STKPHR-G": "{#Super_L(Alt_L(Shift_L(right)))}",
        "STKPHR-RPG": "{#Super_L(Alt_L(Shift_L(page_up)))}",
        "STKPHR-FBL": "{#Super_L(Alt_L(Shift_L(page_down)))}",
        "STKPHR-FPL": "{#Super_L(Alt_L(Shift_L(home)))}",
        "STKPHR-RBG": "{#Super_L(Alt_L(Shift_L(end)))}",
        "STKPHR-RB": "{#Super_L(Alt_L(Shift_L(return)))}",
        "STKPHR-F": "{#Super_L(Alt_L(Shift_L(backspace)))}",
        "STKPHR-L": "{#Super_L(Alt_L(Shift_L(delete)))}",
        "STKPHR-FR": "{#Super_L(Alt_L(Shift_L(escape)))}",
        "STKPHR-LG": "{#Super_L(Alt_L(Shift_L(tab)))}",
        "STKPHR-RP": "{#Super_L(Alt_L(Shift_L(slash)))}",
        "STKPHR-PG": "{#Super_L(Alt_L(Shift_L(backslash)))}",
        "STKWHR": "{#Control_L(Alt_L(Shift_L()))}",
        "AFRBLGT": "{#Control_L(Alt_L(Shift_L(a)))}",
        "PW-FRBLGT": "{#Control_L(Alt_L(Shift_L(b)))}",
        "KR-FRBLGT": "{#Control_L(Alt_L(Shift_L(c)))}",
        "TK-FRBLGT": "{#Control_L(Alt_L(Shift_L(d)))}",
        "EFRBLGT": "{#Control_L(Alt_L(Shift_L(e)))}",
        "TP-FRBLGT": "{#Control_L(Alt_L(Shift_L(f)))}",
        "TKPW-FRBLGT": "{#Control_L(Alt_L(Shift_L(g)))}",
        "H-FRBLGT": "{#Control_L(Alt_L(Shift_L(h)))}",
        "EUFRBLGT": "{#Control_L(Alt_L(Shift_L(i)))}",
        "SKWR-FRBLGT": "{#Control_L(Alt_L(Shift_L(j)))}",
        "K-FRBLGT": "{#Control_L(Alt_L(Shift_L(k)))}",
        "HR-FRBLGT": "{#Control_L(Alt_L(Shift_L(l)))}",
        "PH-FRBLGT": "{#Control_L(Alt_L(Shift_L(m)))}",
        "TPH-FRBLGT": "{#Control_L(Alt_L(Shift_L(n)))}",
        "OFRBLGT": "{#Control_L(Alt_L(Shift_L(o)))}",
        "P-FRBLGT": "{#Control_L(Alt_L(Shift_L(p)))}",
        "KW-FRBLGT": "{#Control_L(Alt_L(Shift_L(q)))}",
        "R-FRBLGT": "{#Control_L(Alt_L(Shift_L(r)))}",
        "S-FRBLGT": "{#Control_L(Alt_L(Shift_L(s)))}",
        "T-FRBLGT": "{#Control_L(Alt_L(Shift_L(t)))}",
        "UFRBLGT": "{#Control_L(Alt_L(Shift_L(u)))}",
        "SR-FRBLGT": "{#Control_L(Alt_L(Shift_L(v)))}",
        "W-FRBLGT": "{#Control_L(Alt_L(Shift_L(w)))}",
        "KP-FRBLGT": "{#Control_L(Alt_L(Shift_L(x)))}",
        "KWR-FRBLGT": "{#Control_L(Alt_L(Shift_L(y)))}",
        "STKPW-FRBLGT": "{#Control_L(Alt_L(Shift_L(z)))}",
        "1-6RB8G9": "{#Control_L(Alt_L(Shift_L(F1)))}",
        "2-6RB8G9": "{#Control_L(Alt_L(Shift_L(F2)))}",
        "3-6RB8G9": "{#Control_L(Alt_L(Shift_L(F3)))}",
        "4-6RB8G9": "{#Control_L(Alt_L(Shift_L(F4)))}",
        "12-6RB8G9": "{#Control_L(Alt_L(Shift_L(F5)))}",
        "23-6RB8G9": "{#Control_L(Alt_L(Shift_L(F6)))}",
        "34-6RB8G9": "{#Control_L(Alt_L(Shift_L(F7)))}",
        "123-6RB8G9": "{#Control_L(Alt_L(Shift_L(F8)))}",
        "234-6RB8G9": "{#Control_L(Alt_L(Shift_L(F9)))}",
        "14-6RB8G9": "{#Control_L(Alt_L(Shift_L(F10)))}",
        "13-6RB8G9": "{#Control_L(Alt_L(Shift_L(F11)))}",
        "24-6RB8G9": "{#Control_L(Alt_L(Shift_L(F12)))}",
        "STKWHR-P": "{#Control_L(Alt_L(Shift_L(up)))}",
        "STKWHR-R": "{#Control_L(Alt_L(Shift_L(left)))}",
        "STKWHR-B": "{#Control_L(Alt_L(Shift_L(down)))}",
        "STKWHR-G": "{#Control_L(Alt_L(Shift_L(right)))}",
        "STKWHR-RPG": "{#Control_L(Alt_L(Shift_L(page_up)))}",
        "STKWHR-FBL": "{#Control_L(Alt_L(Shift_L(page_down)))}",
        "STKWHR-FPL": "{#Control_L(Alt_L(Shift_L(home)))}",
        "STKWHR-RBG": "{#Control_L(Alt_L(Shift_L(end)))}",
        "STKWHR-RB": "{#Control_L(Alt_L(Shift_L(return)))}",
        "STKWHR-F": "{#Control_L(Alt_L(Shift_L(backspace)))}",
        "STKWHR-L": "{#Control_L(Alt_L(Shift_L(delete)))}",
        "STKWHR-FR": "{#Control_L(Alt_L(Shift_L(escape)))}",
        "STKWHR-LG": "{#Control_L(Alt_L(Shift_L(tab)))}",
        "STKWHR-RP": "{#Control_L(Alt_L(Shift_L(slash)))}",
        "STKWHR-PG": "{#Control_L(Alt_L(Shift_L(backslash)))}",
        "STKPWHR": "{#Super_L(Control_L(Alt_L(Shift_L())))}",
        "AFRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(a))))}",
        "PW-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(b))))}",
        "KR-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(c))))}",
        "TK-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(d))))}",
        "EFRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(e))))}",
        "TP-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(f))))}",
        "TKPW-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(g))))}",
        "H-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(h))))}",
        "EUFRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(i))))}",
        "SKWR-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(j))))}",
        "K-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(k))))}",
        "HR-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(l))))}",
        "PH-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(m))))}",
        "TPH-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(n))))}",
        "OFRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(o))))}",
        "P-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(p))))}",
        "KW-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(q))))}",
        "R-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(r))))}",
        "S-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(s))))}",
        "T-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(t))))}",
        "UFRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(u))))}",
        "SR-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(v))))}",
        "W-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(w))))}",
        "KP-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(x))))}",
        "KWR-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(y))))}",
        "STKPW-FRPBLGT": "{#Super_L(Control_L(Alt_L(Shift_L(z))))}",
        "1-6R7B8G9": "{#Super_L(Control_L(Alt_L(Shift_L(F1))))}",
        "2-6R7B8G9": "{#Super_L(Control_L(Alt_L(Shift_L(F2))))}",
        "3-6R7B8G9": "{#Super_L(Control_L(Alt_L(Shift_L(F3))))}",
        "4-6R7B8G9": "{#Super_L(Control_L(Alt_L(Shift_L(F4))))}",
        "12-6R7B8G9": "{#Super_L(Control_L(Alt_L(Shift_L(F5))))}",
        "23-6R7B8G9": "{#Super_L(Control_L(Alt_L(Shift_L(F6))))}",
        "34-6R7B8G9": "{#Super_L(Control_L(Alt_L(Shift_L(F7))))}",
        "123-6R7B8G9": "{#Super_L(Control_L(Alt_L(Shift_L(F8))))}",
        "234-6R7B8G9": "{#Super_L(Control_L(Alt_L(Shift_L(F9))))}",
        "14-6R7B8G9": "{#Super_L(Control_L(Alt_L(Shift_L(F10))))}",
        "13-6R7B8G9": "{#Super_L(Control_L(Alt_L(Shift_L(F11))))}",
        "24-6R7B8G9": "{#Super_L(Control_L(Alt_L(Shift_L(F12))))}",
        "STKPWHR-P": "{#Super_L(Control_L(Alt_L(Shift_L(up))))}",
        "STKPWHR-R": "{#Super_L(Control_L(Alt_L(Shift_L(left))))}",
        "STKPWHR-B": "{#Super_L(Control_L(Alt_L(Shift_L(down))))}",
        "STKPWHR-G": "{#Super_L(Control_L(Alt_L(Shift_L(right))))}",
        "STKPWHR-RPG": "{#Super_L(Control_L(Alt_L(Shift_L(page_up))))}",
        "STKPWHR-FBL": "{#Super_L(Control_L(Alt_L(Shift_L(page_down))))}",
        "STKPWHR-FPL": "{#Super_L(Control_L(Alt_L(Shift_L(home))))}",
        "STKPWHR-RBG": "{#Super_L(Control_L(Alt_L(Shift_L(end))))}",
        "STKPWHR-RB": "{#Super_L(Control_L(Alt_L(Shift_L(return))))}",
        "STKPWHR-F": "{#Super_L(Control_L(Alt_L(Shift_L(backspace))))}",
        "STKPWHR-L": "{#Super_L(Control_L(Alt_L(Shift_L(delete))))}",
        "STKPWHR-FR": "{#Super_L(Control_L(Alt_L(Shift_L(escape))))}",
        "STKPWHR-LG": "{#Super_L(Control_L(Alt_L(Shift_L(tab))))}",
        "STKPWHR-RP": "{#Super_L(Control_L(Alt_L(Shift_L(slash))))}",
        "STKPWHR-PG": "{#Super_L(Control_L(Alt_L(Shift_L(backslash))))}"
}
#+end_src

* Closing bracket
#+begin_src js :tangle plover-emacs.json :exports none
}
#+end_src

* Footnotes

[fn:4] Of course, this isn't a practical examlpe.  If we really wanted
to write "µ" with Plover, we would use a stroke that directly maps to
"µ".

[fn:3] For example, the code blocks shown on this webpage are directly
used to generate the Plover dictionary.  Further, this webpage is
itself generated using Emacs.  All of this happens from a single
source file.  We could even go so far as to host this webpage with
Emacs if we wanted :)

[fn:2] "M" for "meta".  The Meta key, similar to use as the Alt key,
existed before the Alt key.  When Emacs was first created, the Meta
key was common and the notation stuck.

[fn:1] Technically to a [[https://en.wikipedia.org/wiki/Emacs_Lisp#Example][Lisp]] function.
